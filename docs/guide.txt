===============
 torTIA - v0.9
===============



---------------------
 W H A T  I S  I T ?
---------------------


torTIA is python script which essentially converts openMPT pattern data into an Atari 2600 ROM file that plays music. It utilizes the 2.30.03 release of Paul Slocum's Atari 2600 Music Kit for assembling the ROM and the Stella Atari 2600 emulator for playback.


http://www.qotile.net/sequencer.html

http://stella.sourceforge.net/




-------------------
 H O W  T O  U S E
-------------------



There are three areas which make up the overall program. In the working order: a specially prepared Impulse Tracker file(tortia.it), a text file for pasting OpenMPT pattern data(tortia.txt), and the torTIA executable for converting, assembling and playing back your song.



*You'll need Python 2.7 and PIL installed to run the .py file:

http://www.python.org/download/releases/2.7.6/
http://effbot.org/downloads/PIL-1.1.7.win32-py2.7.exe


*And OpenMPT to work with the .it file:

http://openmpt.org/




-----------------
 ---tortia.it---
-----------------


tortia.it is a specially crafted module that contains the the eight instruments of Slocum's driver, sampled note for note. What you hear in the tracker is what you will hear when you convert the pattern data.


--Instruments--


There are 32 "atonal" pitches per instrument, however some are closer to traditionally tuned 12TET pitches than others. There are more details about how they are tuned in "instrument guide.txt".

Each instrument operates from C-1 to C-6 with the exception of the "Full Range" instrument, which stretches a bit beyond C-6. Any notes that are entered outside of the instrument's range will produce no sound and will also be assembled by the converter as silence.



--Effects--


The effect S00 offers a bit of volume control. It doesn't reflect in the .it playback, but notes with S00 will assemble slightly quieter. Any other effect or setting will be ignored by the converter.



--Pattern Length--

The slocum driver recognizes your song 32 rows at a time, so you must paste at least 32 rows into tortia.txt. Likewise, the total number of rows pasted must be a multiple of 32.

*IF YOU PASTE 293 ROWS INTO TORTIA.TXT, YOU WILL ONLY HEAR YOUR SONG UP TO 288 WHEN YOU CONVERT.



--Tempo--


The "tempo" setting in OpenMPT must remain at 150. You adjust the speed of playback through "Ticks/row:". The ticks/row setting you choose in the tracker for your song should match the ticks/row setting in tortia.py when you convert it.



------------------
 ---tortia.txt---
------------------

This is where you paste the OpenMPT pattern data. Make sure to paste both channels into tortia.txt, like the example that is in there now. Otherwise the conversion will screw up. Don't put anything into tortia.txt except OpenMPT pattern data and make sure there are no blank spots in between pasted rows. Use the ModPlug header to connect your pasted patterns.


It should look like:


ModPlug Tracker  IT
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
ModPlug Tracker  IT
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........


	And not like:


ModPlug Tracker  IT
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........

ModPlug Tracker  IT
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........
|...........|...........


*THE NAME AND PLACEMENT OF THIS FILE SHOULD NOT BE ALTERED OR SHUFFLED AROUND. OTHERWISE THE EXECUTABLE WILL BE LOOKING FOR SOMETHING THAT IS LONGER THERE AND POOP ITSELF*

*MAKE SURE TO SAVE BEFORE YOU CONVERT*



------------------
 ---tortia.py---
------------------

This is the interface that allows you to adjust the slocum auto-hat settings and adjust the speed of playback. When you are ready to convert, just click on the big logo and your song will assemble and playback through Stella.

Your assembled .bin is in the "kit" folder,"!THIS_IS_YOUR_SONG!.bin". It will be overwritten everytime you assemble from tortia.txt. Stella is also found in this folder if you want to adjust any of the emulator's settings.


The latest slocum driver has built-in support to play a high-hat sound.  This allows you to have a high hat rhythm playing without having to add it to your pattern data.  The driver plays the high-hat click very short, so often you will barely notice any interference with your song. It plays on the same oscillator as channel 1. If it is interfering with your music too much, just swap channel 1 with channel 2.

The auto-hat pattern is a repeating loop, 32 rows long. If you're looking at the menu's blank auto-hat matrix:




[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]



[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]



[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]



[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]




the 32-long loop moves through it like so:



[x]-[>]-[>]-[>]-[>]-[>]-[>]-[>]-.
 1   2   3   4   5   6   7   8  |
 ,------------------------------'  
 v       
[>]-[>]-[>]-[>]-[>]-[>]-[>]-[>]-.
 9   10  11  12  13  14  15  16 |
 ,------------------------------'  
 v       
[>]-[>]-[>]-[>]-[>]-[>]-[>]-[>]-.
 17  18  19  20  21  22  23  24 |
 ,------------------------------'  
 v       
[>]-[>]-[>]-[>]-[>]-[>]-[>]-[X]
 25  26  27  28  29  30  31  32




The "Wait:" setting denotes how many 32-long pattern segments to wait until the auto-hat kicks in.